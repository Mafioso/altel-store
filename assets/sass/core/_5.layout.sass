//
// Just like Core - Content, the Core - Layout gives you a higher level of abstraction for your modules.
//
// Note: The l- prefix is an implicit module. There is no l base module; it's only used as a prefix for the layout modules. This is borrowed from SMACSS, which uses the l- convention in its layout section.
//

%l-container
  position: relative
  width: 100%
  padding-left: 1rem
  padding-right: 1rem
  margin: auto

.l-container
  @extend %l-container
  // @include bp-min($break-4)
    // don't extend further for large desktop
    // width: $break-4/$rootsize-4*1rem

%l-col, .l-col
  display: inline-block
  vertical-align: top


%l-gutter-l, .l-gutter-l
  padding-left: 1rem
%l-gutter-r, .l-gutter-r
  padding-right: 1rem
%l-gutter, .l-gutter
  padding-right: 1rem
  padding-left: 1rem

%l-bleed-l, .l-bleed-l
  margin-left: -1rem
%l-bleed-r, .l-bleed-r
  margin-right: -1rem
%l-bleed-both, .l-bleed
  margin-right: -1rem
  margin-left: -1rem

%l-fluffy, .l-fluffy
  padding: 1rem
%l-fluffy-tiny, .l-fluffy-tiny
  padding: 1rem .5rem
%l-fluffy-vertical, .l-fluffy-vertical
  padding: 1rem 0

.zoom
  width: 100%

%l-middle, .l-middle
  vertical-align: middle

@include grid("d")
@media only screen and (min-width: #{($break-1)/16*1em})
  @include grid("s")
@media only screen and (min-width: #{($break-2)/16*1em})
  @include grid("m")
@media only screen and (min-width: #{($break-3)/16*1em})
  @include grid("l")
